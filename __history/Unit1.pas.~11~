unit Unit1;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, IdBaseComponent, IdComponent,
  IdTCPConnection, IdTCPClient, IdHTTP, Vcl.Grids, Vcl.DBGrids, Vcl.StdCtrls,uLkJSON ;

type
  TForm1 = class(TForm)
    BtnOnOff: TButton;
    Edit1: TEdit;
    EdtNama: TEdit;
    EdtAlamat: TEdit;
    BtnSimpan: TButton;
    BtnUbah: TButton;
    BtnHapus: TButton;
    Label1: TLabel;
    Label2: TLabel;
    Label3: TLabel;
    IdHTTP1: TIdHTTP;
    StringGrid1: TStringGrid;
    procedure FormShow(Sender: TObject);
  private
    { Private declarations }
    procedure buattabel;
    procedure kondisi_awal;
//    procedure kondisi_proses;
//    procedure Bersih;
    procedure tampil;
  public
    { Public declarations }

  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

function HTTPEncode(const AStr: String): String;
const
  NoConversion = ['A'..'Z','a'..'z','*','@','.','_','-'];
var
  Sp, Rp: PChar;
begin
  SetLength(Result, Length(AStr) * 3);
  Sp := PChar(AStr);
  Rp := PChar(Result);
  while Sp^ <> #0 do
  begin
    if Sp^ in NoConversion then
      Rp^ := Sp^
    else
      if Sp^ = ' ' then
        Rp^ := '+'
      else
      begin
        FormatBuf(Rp^, 3, '%%%.2x', 6, [Ord(Sp^)]);
        Inc(Rp,2);
      end;
    Inc(Rp);
    Inc(Sp);
  end;
  SetLength(Result, Rp - PChar(Result));
end;

function MyEncodeUrl(source:string):string;
var i:integer;
begin
  result := '';
  for i := 1 to length (source) do
  if not (source [i] in ['A'..'Z','a'..'z','0','1'..'9','-','_','~','.']) then
  result := result + '%'+IntToHex(ord(source[i]),2)
  else result := result + source[i];

end;

procedure TForm1.buattabel;
begin
   with StringGrid1 do begin

         Cells[0,0]:='No';
         Cells[1,0]:='ID';
         Cells[2,0]:='Nama';
         Cells[3,0]:='Alamat';

         ColWidths[0] := 30;
         ColWidths[1] := 80;
         ColWidths[2] := 200;
         ColWidths[3] := 300;

         RowCount := 1;
         ColCount := 4;
   end;
end;
procedure TForm1.FormShow(Sender: TObject);
begin
tampil;
end;

procedure TForm1.kondisi_awal;
begin
 BtnSimpan.Enabled := True;
 BtnUbah.Enabled := True;
end;

procedure TForm1.tampil;
var i,sts:integer;
get_url : string;
js : TlkJSONobject;
begin
   //Hendel Error jika Server Nati
   try
     get_url := IdHTTP1.Get('http://localhost/api-json/tampilkan.php');
   except
   Application.MessageBox('Server Mati'+#13+'Silahkan hubungi admin','informasi',MB_ICONERROR);
   exit;
   end;
   //Hendel Error jika URL tidak bisa diterjermahkan JSON
    try
    js := TlkJSON.ParseText(get_url) as TlkJSONObject;
    except
    application.MessageBox('Web Servis Gagal Diterjemahkan.'+#13+
    'Silahkan Hubungi Admin!!!','Informasi Terjemah...',MB_ICONERROR);
    exit;
    end;
   //Hendel Error apabila Datanya kosong
  try
  sts := StrToInt(VarToStr(js.Field['sukses'].Value));
  except
  application.MessageBox('Web Servis Gagal Diterjemahkan.'+#13+
  'Silahkan Hubungi Admin!!!','Informasi Terjemah...',MB_ICONERROR);
    exit;
  end;
  if sts <> 1 then begin
application.MessageBox('Datanya Kosong.'+#13+
'Silahkan Menunggu Datanya Diinput Oleh Admin!!!','Informasi Data Kosong...',MB_ICONEXCLAMATION);
exit;
end;
//Baca data json dengan label data yang terdapat pada coding PHPnya
js:= TlkJSONObject(js.Field['data']);
//Sesuaikan julmlah baris Grid dengan banyaknya data dari databasenya
StringGrid1.RowCount := js.Count + 1;
//Meload data ke Memo, Listbox dan Grid
for i := 0 to js.Count - 1 do begin
//Load Data Ke Grid
StringGrid1.Cells[0,i+1] := IntToStr(i+1)+'.';
StringGrid1.Cells[1, i + 1] := VarToStr(js.Child[i].Field['id'].Value);
StringGrid1.Cells[2, i + 1] := VarToStr(js.Child[i].Field['nama'].Value);
StringGrid1.Cells[3, i + 1] := VarToStr(js.Child[i].Field['alamat'].Value);
end;
js.Free;
end;

end.
